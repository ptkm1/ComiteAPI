generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Historicos {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  acao          String?
  coordenadorId String?
  coordenador   Usuario? @relation(fields: [coordenadorId], references: [id])

  @@index([coordenadorId], name: "coordenadorId")
}

model Usuario {
  id         String       @id @default(uuid())
  email      String       @unique
  nome       String
  senha      String
  Certidao   Certidao[]
  Historicos Historicos[]
  postos     Posto[]
  RG         RG[]
}

model Posto {
  id            String     @id @default(uuid())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  nome_do_posto String
  coordenadorId String?
  coordenador   Usuario?   @relation(fields: [coordenadorId], references: [id])
  horarios      Horarios[]

  @@index([coordenadorId], name: "coordenadorId")
}

model Administrador {
  id       String     @id @default(uuid())
  email    String     @unique
  nome     String
  senha    String
  Certidao Certidao[]
  RG       RG[]
}

model TiposDeStatus {
  id     Int    @id @default(autoincrement())
  titulo String @db.VarChar(255)
}

model RG {
  id                     String         @id @default(uuid())
  NomeCompleto           String
  NomeDoPai              String
  NomeDaMae              String
  CPF                    String
  Orgao                  String
  Motivo                 String
  DataDeSolicitacao      String
  CidadaoSabeCPF         String
  Contato1               String
  Contato2               String?
  Contato3               String?
  Whatsapp               String?
  EstadoDeNaturalidade   String
  CidadeDeNaturalidade   String
  EnderecoResidencial    String
  CidadeResidencial      String
  Cep                    String
  Status                 String
  LocalDeAgendamento     String
  DataDeAgendamento      String
  HoraDoAgendamento      String
  Resolvido              String
  Observacao             String
  coordenadorId          String?
  AdminId                String?
  RG                     String
  DataDeNascimento       String
  CidadaoEmPosseCertidao String
  Admin                  Administrador? @relation(fields: [AdminId], references: [id])
  coordenador            Usuario?       @relation(fields: [coordenadorId], references: [id])

  @@index([AdminId], name: "AdminId")
  @@index([coordenadorId], name: "coordenadorId")
}

model Certidao {
  id                   String         @id @default(uuid())
  NomeCompleto         String
  Status               String
  NomeDoPai            String
  NomeDaMae            String
  CPF                  String
  RG                   String
  Orgao                String
  EmailDoSolicitante   String
  Observacao           String
  Contato1             String
  EstadoDeNaturalidade String
  CidadeDeNaturalidade String
  DataDeSolicitacao    String
  coordenadorId        String?
  AdminId              String?
  DataDeNascimento     String
  Admin                Administrador? @relation(fields: [AdminId], references: [id])
  coordenador          Usuario?       @relation(fields: [coordenadorId], references: [id])

  @@index([AdminId], name: "AdminId")
  @@index([coordenadorId], name: "coordenadorId")
}

model Horarios {
  id      String  @id @default(uuid())
  horario String
  PostoId String
  marcado String?
  Posto   Posto   @relation(fields: [PostoId], references: [id])

  @@index([PostoId], name: "PostoId")
}

model Hora {
  id      Int      @id @default(autoincrement())
  posto   String   @db.VarChar(20)
  dia     Int
  dianome String   @db.VarChar(20)
  data    DateTime @db.Date
  hora    DateTime @db.Time(0)
  marcado String   @db.VarChar(3)
}
